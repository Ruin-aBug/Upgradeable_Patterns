/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { RuinNFTV2, RuinNFTV2Interface } from "../../contracts/RuinNFTV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "test",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161213561004c6000396000818161066e015281816106ae01528181610769015281816107a9015261083c01526121356000f3fe60806040526004361061012a5760003560e01c806370a08231116100ab578063a22cb4651161006f578063a22cb46514610313578063b88d4fde14610333578063c87b56dd14610353578063e985e9c514610373578063f2fde38b146103bc578063f8a8fd6d146103dc57600080fd5b806370a0823114610296578063715018a6146102b65780638129fc1c146102cb5780638da5cb5b146102e057806395d89b41146102fe57600080fd5b80633659cfe6116100f25780633659cfe61461020057806342842e0e146102205780634f1ef2861461024057806352d1902d146102535780636352211e1461027657600080fd5b806301ffc9a71461012f57806306fdde0314610164578063081812fc14610186578063095ea7b3146101be57806323b872dd146101e0575b600080fd5b34801561013b57600080fd5b5061014f61014a366004611aad565b61040c565b60405190151581526020015b60405180910390f35b34801561017057600080fd5b5061017961045e565b60405161015b9190611b22565b34801561019257600080fd5b506101a66101a1366004611b35565b6104f0565b6040516001600160a01b03909116815260200161015b565b3480156101ca57600080fd5b506101de6101d9366004611b6a565b610517565b005b3480156101ec57600080fd5b506101de6101fb366004611b94565b610632565b34801561020c57600080fd5b506101de61021b366004611bd0565b610663565b34801561022c57600080fd5b506101de61023b366004611b94565b610743565b6101de61024e366004611c8e565b61075e565b34801561025f57600080fd5b5061026861082f565b60405190815260200161015b565b34801561028257600080fd5b506101a6610291366004611b35565b6108e2565b3480156102a257600080fd5b506102686102b1366004611bd0565b610942565b3480156102c257600080fd5b506101de6109c8565b3480156102d757600080fd5b506101de6109dc565b3480156102ec57600080fd5b5060fb546001600160a01b03166101a6565b34801561030a57600080fd5b50610179610b3f565b34801561031f57600080fd5b506101de61032e366004611cdc565b610b4e565b34801561033f57600080fd5b506101de61034e366004611d18565b610b59565b34801561035f57600080fd5b5061017961036e366004611b35565b610b91565b34801561037f57600080fd5b5061014f61038e366004611d80565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b3480156103c857600080fd5b506101de6103d7366004611bd0565b610c05565b3480156103e857600080fd5b506040805180820190915260078152667570677261646560c81b6020820152610179565b60006001600160e01b031982166380ac58cd60e01b148061043d57506001600160e01b03198216635b5e139f60e01b145b8061045857506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606065805461046d90611db3565b80601f016020809104026020016040519081016040528092919081815260200182805461049990611db3565b80156104e65780601f106104bb576101008083540402835291602001916104e6565b820191906000526020600020905b8154815290600101906020018083116104c957829003601f168201915b5050505050905090565b60006104fb82610c7b565b506000908152606960205260409020546001600160a01b031690565b6000610522826108e2565b9050806001600160a01b0316836001600160a01b031614156105955760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105b157506105b1813361038e565b6106235760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161058c565b61062d8383610cda565b505050565b61063c3382610d48565b6106585760405162461bcd60e51b815260040161058c90611dee565b61062d838383610dc7565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156106ac5760405162461bcd60e51b815260040161058c90611e3b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106f56000805160206120b9833981519152546001600160a01b031690565b6001600160a01b03161461071b5760405162461bcd60e51b815260040161058c90611e87565b61072481610f38565b6040805160008082526020820190925261074091839190610f40565b50565b61062d83838360405180602001604052806000815250610b59565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156107a75760405162461bcd60e51b815260040161058c90611e3b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107f06000805160206120b9833981519152546001600160a01b031690565b6001600160a01b0316146108165760405162461bcd60e51b815260040161058c90611e87565b61081f82610f38565b61082b82826001610f40565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108cf5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161058c565b506000805160206120b983398151915290565b6000818152606760205260408120546001600160a01b0316806104585760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161058c565b60006001600160a01b0382166109ac5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161058c565b506001600160a01b031660009081526068602052604090205490565b6109d06110ab565b6109da6000611105565b565b600054610100900460ff16158080156109fc5750600054600160ff909116105b80610a165750303b158015610a16575060005460ff166001145b610a795760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161058c565b6000805460ff191660011790558015610a9c576000805461ff0019166101001790555b610ae460405180604001604052806007815260200166149d5a5b93919560ca1b81525060405180604001604052806007815260200166149d5a5b93919560ca1b815250611157565b610aec611188565b610af73360016111b7565b8015610740576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b60606066805461046d90611db3565b61082b338383611350565b610b633383610d48565b610b7f5760405162461bcd60e51b815260040161058c90611dee565b610b8b8484848461141f565b50505050565b6060610b9c82610c7b565b6000610bb360408051602081019091526000815290565b90506000815111610bd35760405180602001604052806000815250610bfe565b80610bdd84611452565b604051602001610bee929190611ed3565b6040516020818303038152906040525b9392505050565b610c0d6110ab565b6001600160a01b038116610c725760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161058c565b61074081611105565b6000818152606760205260409020546001600160a01b03166107405760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161058c565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d0f826108e2565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610d54836108e2565b9050806001600160a01b0316846001600160a01b03161480610d9b57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b80610dbf5750836001600160a01b0316610db4846104f0565b6001600160a01b0316145b949350505050565b826001600160a01b0316610dda826108e2565b6001600160a01b031614610e005760405162461bcd60e51b815260040161058c90611f02565b6001600160a01b038216610e625760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161058c565b610e6f83838360016114ef565b826001600160a01b0316610e82826108e2565b6001600160a01b031614610ea85760405162461bcd60e51b815260040161058c90611f02565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6107406110ab565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610f735761062d83611577565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610fcd575060408051601f3d908101601f19168201909252610fca91810190611f47565b60015b6110305760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161058c565b6000805160206120b9833981519152811461109f5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161058c565b5061062d838383611613565b60fb546001600160a01b031633146109da5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161058c565b60fb80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661117e5760405162461bcd60e51b815260040161058c90611f60565b61082b8282611638565b600054610100900460ff166111af5760405162461bcd60e51b815260040161058c90611f60565b6109da611686565b6001600160a01b03821661120d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161058c565b6000818152606760205260409020546001600160a01b0316156112725760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161058c565b6112806000838360016114ef565b6000818152606760205260409020546001600160a01b0316156112e55760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161058c565b6001600160a01b038216600081815260686020908152604080832080546001019055848352606790915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b816001600160a01b0316836001600160a01b031614156113b25760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161058c565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61142a848484610dc7565b611436848484846116b6565b610b8b5760405162461bcd60e51b815260040161058c90611fab565b6060600061145f836117b4565b600101905060008167ffffffffffffffff81111561147f5761147f611beb565b6040519080825280601f01601f1916602001820160405280156114a9576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846114e2576114e7565b6114b3565b509392505050565b6001811115610b8b576001600160a01b03841615611535576001600160a01b0384166000908152606860205260408120805483929061152f908490612013565b90915550505b6001600160a01b03831615610b8b576001600160a01b0383166000908152606860205260408120805483929061156c90849061202a565b909155505050505050565b6001600160a01b0381163b6115e45760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161058c565b6000805160206120b983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61161c8361188c565b6000825111806116295750805b1561062d57610b8b83836118cc565b600054610100900460ff1661165f5760405162461bcd60e51b815260040161058c90611f60565b81516116729060659060208501906119fe565b50805161062d9060669060208401906119fe565b600054610100900460ff166116ad5760405162461bcd60e51b815260040161058c90611f60565b6109da33611105565b60006001600160a01b0384163b156117a957604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906116fa903390899088908890600401612042565b6020604051808303816000875af1925050508015611735575060408051601f3d908101601f191682019092526117329181019061207f565b60015b61178f573d808015611763576040519150601f19603f3d011682016040523d82523d6000602084013e611768565b606091505b5080516117875760405162461bcd60e51b815260040161058c90611fab565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610dbf565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106117f35772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061181f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061183d57662386f26fc10000830492506010015b6305f5e1008310611855576305f5e100830492506008015b612710831061186957612710830492506004015b6064831061187b576064830492506002015b600a83106104585760010192915050565b61189581611577565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6119345760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161058c565b600080846001600160a01b03168460405161194f919061209c565b600060405180830381855af49150503d806000811461198a576040519150601f19603f3d011682016040523d82523d6000602084013e61198f565b606091505b50915091506119b782826040518060600160405280602781526020016120d9602791396119c0565b95945050505050565b606083156119cf575081610bfe565b610bfe83838151156119e45781518083602001fd5b8060405162461bcd60e51b815260040161058c9190611b22565b828054611a0a90611db3565b90600052602060002090601f016020900481019282611a2c5760008555611a72565b82601f10611a4557805160ff1916838001178555611a72565b82800160010185558215611a72579182015b82811115611a72578251825591602001919060010190611a57565b50611a7e929150611a82565b5090565b5b80821115611a7e5760008155600101611a83565b6001600160e01b03198116811461074057600080fd5b600060208284031215611abf57600080fd5b8135610bfe81611a97565b60005b83811015611ae5578181015183820152602001611acd565b83811115610b8b5750506000910152565b60008151808452611b0e816020860160208601611aca565b601f01601f19169290920160200192915050565b602081526000610bfe6020830184611af6565b600060208284031215611b4757600080fd5b5035919050565b80356001600160a01b0381168114611b6557600080fd5b919050565b60008060408385031215611b7d57600080fd5b611b8683611b4e565b946020939093013593505050565b600080600060608486031215611ba957600080fd5b611bb284611b4e565b9250611bc060208501611b4e565b9150604084013590509250925092565b600060208284031215611be257600080fd5b610bfe82611b4e565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611c1257600080fd5b813567ffffffffffffffff80821115611c2d57611c2d611beb565b604051601f8301601f19908116603f01168101908282118183101715611c5557611c55611beb565b81604052838152866020858801011115611c6e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215611ca157600080fd5b611caa83611b4e565b9150602083013567ffffffffffffffff811115611cc657600080fd5b611cd285828601611c01565b9150509250929050565b60008060408385031215611cef57600080fd5b611cf883611b4e565b915060208301358015158114611d0d57600080fd5b809150509250929050565b60008060008060808587031215611d2e57600080fd5b611d3785611b4e565b9350611d4560208601611b4e565b925060408501359150606085013567ffffffffffffffff811115611d6857600080fd5b611d7487828801611c01565b91505092959194509250565b60008060408385031215611d9357600080fd5b611d9c83611b4e565b9150611daa60208401611b4e565b90509250929050565b600181811c90821680611dc757607f821691505b60208210811415611de857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60008351611ee5818460208801611aca565b835190830190611ef9818360208801611aca565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b600060208284031215611f5957600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008282101561202557612025611ffd565b500390565b6000821982111561203d5761203d611ffd565b500190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061207590830184611af6565b9695505050505050565b60006020828403121561209157600080fd5b8151610bfe81611a97565b600082516120ae818460208701611aca565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122006aac00d930c0d75b514861ae41aeaeedc276b664ab8e497bda489eafcadeb3464736f6c634300080a0033";

type RuinNFTV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RuinNFTV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RuinNFTV2__factory extends ContractFactory {
  constructor(...args: RuinNFTV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RuinNFTV2> {
    return super.deploy(overrides || {}) as Promise<RuinNFTV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RuinNFTV2 {
    return super.attach(address) as RuinNFTV2;
  }
  override connect(signer: Signer): RuinNFTV2__factory {
    return super.connect(signer) as RuinNFTV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RuinNFTV2Interface {
    return new utils.Interface(_abi) as RuinNFTV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RuinNFTV2 {
    return new Contract(address, _abi, signerOrProvider) as RuinNFTV2;
  }
}
